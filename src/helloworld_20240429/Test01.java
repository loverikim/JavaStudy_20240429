/*
  여러줄 주석처리는 이렇게 
*/
package helloworld_20240429;

public class Test01 {

	public static void main(String[] args) {
		
		// 정수 변수 X를 선언
		int x; // 메모리(ram)에 4byte 공간이 하나 생성됨 -> 이름이 X로
		x = 10; // 위에서 선언된 정수 변수 x에 정수값 10이 저장됨 -> x의 초기값-> x를 초기화 했다.
		// int x;처럼 모든 프로그램은 변수 앞에 어디에 저장할 것인지 데이터 타입을 작성해주어야 함.
		int y;
		int z;
		
		// int x, y, z; 한번에 3개으이 정수변수를 선언. 데이터 타입이 같을 경우.
		 
		//int x; 이미 선언된 변수를 다시 선언하는 것은 불가.// 위에서 선언하고 다시 선언하게 되면 에러가 남.
		x = 100; // 다시 값을 넣는 것은 가능.
		
		// 첫번째 글자는 문자이거나 $, _ 이어야 하고 숫자로 시작할 수 없음. 
		// 보통 클래스이름은 첫글자 대문자 사용. 변수는 소문자로 시작.
		y = 20;
		int a = 100; // 정수변수 a를 선언과 동시에 100으로 초기화
		
		z = a + y; // 빨간색 x표시 에러 표시 y가 초기화가 되지 않음
		System.out.println("저의 수학점수는 " + a + "점 입니다!");
		// 자바에는 파이썬과 달리 f스트링이 없음. +로 연결 문자열은 ""로 분리해줘야 함.
		System.out.println("큰따옴표를\" \n찍어봅시다.");
		
		int b;
		
		char c = 'A'; // c변수에 65가 저장 ->: 한 개의 문자는 ''로 묶음
		//char d = "A";  에러 발생 --> ""로 묶었다는 것은 문자열을 의미
		
		double e1 = 10.1;
		// 색이 변함 => 예약어. 
		
		String f = "Korea"; // 문자열은 String(첫글자 대문자!!)로 선언
		// 기본 내장된 Class. 첫글자가 대문자 --> String이라는 Class임.
		
		/*
		 실수 타입
		 
		 float(4byte) - 소수점 자리 7자리
		 double(8byte) - 소수점 자리 15자리 		 
		 
		*/
		
		float e2 = 3.14f; // float형 실수 변수는 마지막에 f 붙임.
		// float에 저장할 시에는 뒤에 f를 넣어 줘야함.
		// double e2 = 3.14 이렇게 적음 됨 그래서 보통 double사용
		
		long k = 10L;//long을 사용할 때는 숫자 뒤에 L을 붙임
		// long형 정수 변수는 마지막에 L 붙임.
		
		boolean aaa = true; // true, false는 소문자로 작성
		boolean bbb = false;// 파이썬은 논리연산자는 첫글자 대문자 작성.
		
		
		
		//**보통 정수는 int, 실수는 double로, 문자는 char, 문자열 String, 논리 연산자 boolean 사용**
		
	
	}

}

/*
 
 용량 범위를 벗어나게 되면 이상한 값으로 저장이 되기 때문에 더 큰 데이터 타입으로 
 변환하여 저장 해야 함.
 예) 성적- 한 과목당 범위안에 들어가는 값 만점이래야 100점이기 때문에 1byte로 타입을 
 지정해 줘도 됨. 
 보통은 정수 저장시 int를 사용. 21억을 넘어가게 된다면 long을 사용.
 임베디드 프로그래밍에서는 1byte라도 아끼기 위해서 정확하게 지정을 해줌.
 예)키판에 들어가는 프로그램
  
 1byte
 0~1만 저장 가능 즉, 이진수만 가능
 10진수로 바꾸면 ---> 0~255까지 저장할 수 있는 공간 
 용량 계산 반을 잘라 음수 -128 ~ 양수 127까지가 저장 할 수 있는 공간.
  
 8자리를 채울 수 있는 가장 큰 수는 1   
 1,1,1,1,1,1,1,1			 ---> 10진수로 바꾸면 255
 8자리를 채울 수 있는 가장 작은 수는 0
 0,0,0,0,0,0,0,0			 ---> 10진수로 바꾸면   0  
 
 */
 
/*
 char는 음수가 없음. 아스키 코드나, 유니코드를 저장하기 위해서 사용함.
 문자 한 글자를 저장하기 위한 자료타입.
 
 문자열 String
 */   

/* 작은 값이면 float 큰값이면 double로 저장해야 함.*/

/*
 자동 타입 변환
 값의 허용 범위가 작은 타입이 큰 타입으로 저장될 경우 작은 값은 큰 값에 넣을 수 있음
 byte < short < int < long < float < double
*/

/*
 char 타입의 경우 int타입으로 자동변환되면 유니코드 앖이 int타입에 저장
 
 char charValue = 'A';
 int intValue = charValue; // 65가 저장됨
*/


